Лабораторная работа №4. Разделяемая память.

Постановка задачи
-----------------

Требуется создать 2 программы, выполняющие следующие действия.

"Сервер":
1. Создание разделяемой памяти размером 4 Кб.
2. Подключение разделяемой памяти к ВАП процесса.
 - младшие 4 байта разделяемой памяти содержат размер полезных данных ((int*)shm)
 - остальные 4092 байта - собственно полезные данные (от (char*)(shm+4) до (char*)(shm+4095))
3. Выполнение цикла
3.1. если размер полезных данных равен -1, выполнить следующие действия
3.1.1. отключить разделяемую память от ВАП
3.1.2. удалить разделяемую память
3.1.3. завершить процесс
3.2. если размер полезных данных изменился - вывести новые данные на консоль
3.3. если размер полезных данных не изменился - перейти к следующей итерации

"Клиент":
1. Подключение к разделяемой памяти.
2. Подключение разделяемой памяти к ВАП процесса.
3. Запись в область данных разделяемой памяти AAA, увеличение размера полезных данных на 3, sleep(5)
4. Запись в область данных разделяемой памяти BBB, увеличение размера полезных данных на 3, sleep(5)
5. Запись в область данных разделяемой памяти CCC, увеличение размера полезных данных на 3, sleep(5)
6. Установка размера полезных данных в -1
7. Отключение от разделяемой памяти
8. Завершение процесса.

Замечание. Рекомендуется запускать сервер в одной локальной консоли, а клиент - в другой.
Переключение между консолями - Alt+F1, Alt+F2, Alt+F3,..

Дополнительный требования
-------------------------

1. В программе должны использоваться вызовы функций ftok(), shmat(), shmctl(), shmdt(), shmget().
2. Вызовы функций должны сопровождаться проверкой возвращаемых значений.


Дополнения и замечания
----------------------
1. Лабораторная работа размещена по адресу \\S-FILE2\globaltemp\VMWare\OS-Labs\
2. В виртуальной машине вы можете работать под учетной записью root (пароль root)
3. Для редактирования можно использовать встроенный редактор Midnight Commander (вызывается по F4)
4. Для компляции и линковки можно использовать командную строку следующего вида:

   cc  -o  имя_исполняемого_файла  имя_файла_исходного_кода

   например:   cc  -o  myserver  server.c

5. Для проверки наличия разделяемой памяти можно использовать команду ipcs:

   например:   ipcs

6. Для удаление разделяемой памяти можно использовать команду iprm:

   например:   ipcrm --help


7. Для запуска программ следует использовать командную строку следующего вида:

   ./myserver
